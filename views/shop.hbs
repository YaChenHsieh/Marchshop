<style>
    .shop-items-for-card {
        border: solid 5px gray
    }

    .card {
        float: left;
    }

    .card-img-top {
        height: 300px;
        border: solid 5px gray;
    }

    .cart-item-image {
    width: 75px;
    height: auto;
    border-radius: 10px;
}

.card-out{
    background: #182765;  
    background: -webkit-linear-gradient(to right, #FDBD37, #B92020, #182765);  
    background: linear-gradient(to right, #FDBD37, #B92020, #182765); 
}

.forcart{
    background: wheat;  
    
}

.div_right_bottom {
    width:fixed;
    height:fixed;
    float:right;
    position:fixed;
    right:0px;
    bottom:0px;
    z-index:20;
    padding: 0;
    margin:0;
    border:0;
}
    
</style>


{{!-- class="div_right_bottom" 視窗永遠在右下角(購物車cart placed) --}}
<div class="div_right_bottom" style=" margin:0px; padding:0px">
    <section class="container content-section">

        <div class="forcart">

            <h2 class="section-header">CART</h2>

            <div class="cart-row">
                <span class="cart-item cart-header cart-column">ITEM</span>
                <span class="cart-price cart-header cart-column">PRICE</span>
                <span class="cart-quantity cart-header cart-column">QUANTITY</span>
            </div>

            <div class="cart-items">
            </div>

            <div class="cart-total">
                <strong class="cart-total-title">Total</strong>
                <span class="cart-total-price" name="Total" id="Total">$0</span>
            </div>

            <button class="btn btn-primary btn-purchase" type="button">PURCHASE</button>
        </div>
    </section>



</div>


<section class="container content-section " id="shop4-5i" data-rv-view="2491">

    <div class="card-out text-center">
        <div class="mbr-shop" card-buttons="">
            <!-- Shop Gallery -->
            <div class="row col-md-12">
                <div class="wrapper-shop-items col-md-12">
                    <div class="mbr-gallery-row">
                        <div>
                            {{#each shopitems}}
                            <div class="card" style="width: 16rem;">
                                <img class="card-img-top" src="" alt="{{P_name}}">
                                <div class="card-body">
                                    <h5 class="card-title">{{P_name}}</h5>
                                    <p class="card-price">${{Price}}</p>
                                    <button id="p1" class="btn btn-primary shop-item-button" type="button">ADD TO CART</button>
                                </div>

                            </div>
                            {{/each}}






                        </div>
                    </div>
                    <div class="clearfix"></div>
                </div>
            </div>
        </div><!-- Lightbox -->
        <div class="shopItemsModal_wraper" style="z-index: 100;">
            <div class="shopItemsModalBg"></div>
            <div class="shopItemsModal row">
                <div class="col-md-6 image-modal"></div>
                <div class="col-md-6 text-modal"></div>
                <div class="closeModal">
                    <div class="close-modal-wrapper"></div>
                </div>
            </div>
        </div>
    </div>
    </div>

</section>

{{!-- <section class="container content-section">

    <div class="forcart">

        <h2 class="section-header">CART</h2>

        <div class="cart-row">
            <span class="cart-item cart-header cart-column">ITEM</span>
            <span class="cart-price cart-header cart-column">PRICE</span>
            <span class="cart-quantity cart-header cart-column">QUANTITY</span>
        </div>

        <div class="cart-items">
        </div>

        <div class="cart-total">
            <strong class="cart-total-title">Total</strong>
            <span class="cart-total-price" name="Total" id="Total">$0</span>
        </div>

        <button class="btn btn-primary btn-purchase" type="button">PURCHASE</button>
    </div>
</section> --}}

<script>


    var a = parseFloat($(".card-price1").text().slice(1, 5))
    console.log("a是" + typeof (a))

    /*$(".btn-danger ").on("click", function () {
            alert('remove clicked');
        });
    */


    //取得 點擊buy it 的事件
    var AddCartButtons = document.getElementsByClassName("shop-item-button")
    for (let i = 0; i < AddCartButtons.length; i++) {
        AddCartButtons[i].addEventListener('click', addItemclick);
    }


    // 1.addItemclick=>jquery寫法
    function addItemclick() {

        var shopItem = $(this).parents(".card")
        console.log("Item I clicked" + shopItem);
        var title = $(".card-title", shopItem).text(); //$(  ".要取得的class名稱", parent class ).text() 要取得屬性text就直接.text ; 要取得src就 .attr("src")
        console.log("clicked title" + title);
        var price = $(".card-price", shopItem).text();
        console.log("clicked price" + price);
        var imgsrc = $(".card-img-top", shopItem).attr("src"); //取屬性src
        console.log("clicked src" + imgsrc);

        addItemToCart(title, price, imgsrc)
        /*updateCartTotal()*/
    }

    /*  addItemclick=>js寫法
    /*  function addItemclick(event){
        var button = event.target
        var shopItem = button.parentElement.parentElement
        console.log("shopItem");
        console.log(shopItem); 
        var title = shopItem.getElementsByClassName('card-title')[0].innerText
        var T = shopItem.getElementsByClassName('card-title')
        console.log("title"); 
        console.log(title); 
        console.log("T");
        console.log(T); 
        var price = shopItem.getElementsByClassName('card-price')[0].innerText
        console.log("price"); 
        console.log(price); 
        var imageSrc = shopItem.getElementsByClassName('card-top-image')[0].src
        addItemToCart(title, price, imageSrc)
        updateCartTotal()
        }
    */

    //2. add item to cart
    function addItemToCart(title, price, imgsrc) {

        var data =
            `<div class="cart-item cart-column">
    <img class="cart-item-image" src="${imgsrc}" width="100" height="100">
    <span class="cart-item-title">${title}</span>
    <span class="cart-price cart-column">${price}</span>
    <input class="cart-quantity-input" type="number" value="1" min="1">
    <button class="btn btn-danger" type="button">REMOVE</button>
    </div>`

        var cartItems = document.getElementsByClassName("cart-items")[0]; //選取cart-items內所有元素<div class="cart-items"></div>
        var cartItemsNames = cartItems.getElementsByClassName("cart-item-title")//選取cart-items下，所有class為cart-item-title的值=>為一陣列[]    

        console.log("cartItems:cartItems[0]") //若沒有[0]:HTMLcolletion
        console.log(cartItems) //<div class="cart-items">...</div>
        console.log("======================")
        for (let i = 0; i < cartItemsNames.length; i++) {
            console.log("inside the loop")
            let item_name = cartItemsNames[i]

            console.log(cartItemsNames) //很多cart-item-title HTMLcollection
            console.log("item_name:cartItemsNames[i]")//cartItemsNames = 
            console.log(item_name)//1:<span>item1</span> 2:<span>item2</span>
            console.log(item_name.innerText)
            console.log("======================")
            if (title == item_name.innerText) {
                alert("已經在購物車內")
                return
            }//if end

        }//for end
        $(".cart-items").append(data);
        alert(`${title} 加入購物車`)
        updatePrice();
    }//function addItemToCart end


    // 3. remove cart button //動態增加的元素，要透過抓取父元素來達成繫結 $("父元素").on("事件","所抓取元素",function)
    $(".cart-items").on("click", ".btn-danger", function () {

        alert("remove this item");
        $(this).closest("div").remove();
        updatePrice()
    })

    // 4. count the amount
    function updatePrice() {
        let cartItems = document.getElementsByClassName("cart-items")[0];//取出cart-items
        let cartItemsPrices = cartItems.getElementsByClassName("cart-price");//HTMLcollection
        let cartItemsQuantities = cartItems.getElementsByClassName("cart-quantity-input");//HTMLcollection
        let cartItemsNames = cartItems.getElementsByClassName("cart-item-title")//HTMLcollection

        var total = 0 //先讓total在外，之後可以近迴圈相加
        for (let i = 0; i < cartItemsQuantities.length; i++) {

            let price = parseFloat(cartItemsPrices[i].innerText.slice(1, 5))
            let quantity = parseFloat(cartItemsQuantities[i].value)
            var item = cartItemsNames[i].innerText
            console.log("cart item price and Q")
            console.log(price)
            console.log(quantity)
            console.log(item)
            total = total + (price * quantity)
            console.log("total")
            console.log(total)


            //第一個post檢查
            //data= {"x":[{"price":price},{"quantity":quantity},{"item":item}]}=>待查清規則
            //test = `price=${price}&quantity=${quantity}&item=${item}`
            //console.log("找不到的data")
            //console.log(test)

            //$.post("/qqq", test, function (res, status, xhr) {
            //console.log("成功")

            //})

            //若document.getElementsByClassName("cart-total-price")[0].innerText = "$"+total 放在迴圈內，則刪除資料時，刪到最後一筆值並不會更新數字
        };//for end
        total = Math.round(total * 100) / 100 //=> 若加此項Math.round，則是四捨五入的算式
        //"$"+total若放在迴圈外面，則數字會同步更新
        document.getElementsByClassName("cart-total-price")[0].innerText = "$" + total;

        //取total去後端
        $(".cart-total-price").attr('value', total);
        console.log($(".cart-total-price").attr('value'));
        console.log(`total=${total}`)
    }

    //5. Quantity changed => update price
    $(".cart-items").on("change", ".cart-quantity-input", function () {
        alert("value changed");
        updatePrice();
    })

    //6. Purchase click
    $(".btn-purchase").on("click", function () {
        alert("Thanks for purchase")


        //取值
        let cartItems = document.getElementsByClassName("cart-items")[0];//取出cart-items
        let cartItemsPrices = cartItems.getElementsByClassName("cart-price");//HTMLcollection
        let cartItemsQuantities = cartItems.getElementsByClassName("cart-quantity-input");//HTMLcollection
        let cartItemsNames = cartItems.getElementsByClassName("cart-item-title")//HTMLcollection

        cartarray = [];
        cartObj = {}
        //透過迴圈去取得最終在購物車被點選的項目
        count = 0;
        for (let i = 0; i < cartItemsNames.length; i++) {
            let price = parseFloat(cartItemsPrices[i].innerText.slice(1, 5))
            let qty = parseFloat(cartItemsQuantities[i].value)
            var item = cartItemsNames[i].innerText
            console.log(i + " 取出值:P,Q,N")
            console.log(price)
            console.log(qty)
            console.log(item)
            cartObj = { "item": item, "price": price, "qty": qty };
            cartarray.push(cartObj);
            console.log("怪")
            count = count + 1
            //test1 =`price=${price}&quantity=${qty}&item=${item}` test


            //若document.getElementsByClassName("cart-total-price")[0].innerText = "$"+total 放在迴圈內，則刪除資料時，刪到最後一筆值並不會更新數字
        };//for end
        console.log(count)
        console.log("count")
        console.log("cartarray")
        console.log(cartarray)

        //也怪//透過$("#Total").val()找不到值，但用$(".cart-total-price").attr('value')可喔
        //cartTotal = $("#Total").val();
        //console.log("cartTotal")
        //console.log(cartTotal)
        valueCART = $(".cart-total-price").attr('value')//$("#Total").attr('value')相等
        console.log("valueCART");
        console.log(valueCART);


        cartObj = {"total":valueCART}
        cartarray.push(cartObj);
        console.log("cartarray after push")
        console.log(cartarray)
        //let test = {};
        //test["total"] = valueCART;
        //test["objs"] = cartarray;
    
       
        //console.log("========test=======")
       //console.log(test)


        //cartObj["total"] = valueCART //{}物件新增的方法 {}=>透過 obj["屬性name"]：屬性值
        //cartarray.push(cartObj); ===> 此處ajax回傳值，抓不到[]陣列，但改用物件卻可以{}
        //let test = cartarray
        // }//for end


        //purchase資料去後端
         $.ajax({
                url: '/qqq',
                data: JSON.stringify(cartarray),
                contentType: 'application/json', //預設就是這個格式
                processData: true, //此處會影響結果，會將data{}的內容轉換成鍵值字串，可改false試試看
                type: "post",
                dataType: 'json',
                success: function (res, status, jqXHR) {
                    console.log(status)
                    console.log(res)
                }
            })







    })











</script>